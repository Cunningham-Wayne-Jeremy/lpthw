The print command has ()s after it like so print()
It can print letters numbers and variables
# is the comment character
-----------------------------------------------------------------------------------------------------------------------------------------
For some odd reason the print("string", 1 + 2) fails I do not understand why
Its because you were using python 2.0 derp
-----------------------------------------------------------------------------------------------------------------------------------------
PEMDAS isnt as simple as the acronym suggests its actually better represented
as PE (M&D) (A&S) so Parenthesis, exponents THEN Multiplication and division happen at the same time and
addition and subtraction happen at the same time after that.
-----------------------------------------------------------------------------------------------------------------------------------------
Variables are easily declared in python just variable name = something
-----------------------------------------------------------------------------------------------------------------------------------------
f is a formatting character and is used to reference variables inside strings
for example print(f"My age is {my_age}.") pretty simple but keep in mind that in
a print statement the f goes INSIDE the Parenthesis but outside the quotations
-----------------------------------------------------------------------------------------------------------------------------------------
You can use f in variables like so: var1 = f"Its the same {var}" REMEMBER that
-----------------------------------------------------------------------------------------------------------------------------------------
You can also use stat a string with a {} in a variable and then you can change it later. For example
x = "No f yet but we will leave a {} here"
print(x.format(brackets))
You only need one variable and the print function. I assume there are other ways to do this without the print
function though. Its very interesting REMEMBER THIS
-----------------------------------------------------------------------------------------------------------------------------------------
You can use the + to concatenate strings and variables as well
-----------------------------------------------------------------------------------------------------------------------------------------
# the .format('snow')) can be used to change the values within the curly brackets
#but if there are multiple brackets how do you differentiate them from each other??
#The reason this is important is that it can be used in loops or other situations where a string is already defined apparently
-----------------------------------------------------------------------------------------------------------------------------------------
f is the same as .format(). For example
print("Its fleece was white as {}.".format('snow'))
The above code is the same as:
print(f"Its fleece was white as {snow}")
-----------------------------------------------------------------------------------------------------------------------------------------
print("a" * 10) This will print the character a 10 times interesting that you can do math on strings.
-----------------------------------------------------------------------------------------------------------------------------------------
,end="" allows you to print on the same line. If you use: + " " it will perform a line break which may not be the desired result.
So Remember , end=" " means no line break where + will add a line break
-----------------------------------------------------------------------------------------------------------------------------------------
\ is the escape character good for escaping out of quotes and getting around
special characters
-----------------------------------------------------------------------------------------------------------------------------------------
"""This is a multi line string
As long as it starts and ends with
 \"\"\" characters. It will continue
forever"""
-----------------------------------------------------------------------------------------------------------------------------------------
ERROR: I used a /n instead of a \n DONT DO THAT!
-----------------------------------------------------------------------------------------------------------------------------------------
There are a good amount of escape character combinatations \t tabs
\n as mentioned goes to a new line
\r does a carraiage return which is like a new line except in some situations
its a little different
\ combined with a special char will exclude a special characters like ' or "
There are also \ combinations that allow different formatting
-----------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------
 
